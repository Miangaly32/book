/*
Deployment script for book

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "book"
:setvar DefaultFilePrefix "book"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_Livre_ToTable]...';


GO
ALTER TABLE [dbo].[Livre] DROP CONSTRAINT [FK_Livre_ToTable];


GO
PRINT N'Dropping [dbo].[FK_Livre_ToTable_1]...';


GO
ALTER TABLE [dbo].[Livre] DROP CONSTRAINT [FK_Livre_ToTable_1];


GO
PRINT N'Starting rebuilding table [dbo].[Auteur]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Auteur] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [Nom]    NVARCHAR (50) NULL,
    [Prenom] NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Auteur])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Auteur] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Auteur] ([Id], [Nom], [Prenom])
        SELECT   [Id],
                 [Nom],
                 [Prenom]
        FROM     [dbo].[Auteur]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Auteur] OFF;
    END

DROP TABLE [dbo].[Auteur];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Auteur]', N'Auteur';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Genre]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Genre] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [Designation] NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Genre])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Genre] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Genre] ([Id], [Designation])
        SELECT   [Id],
                 [Designation]
        FROM     [dbo].[Genre]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Genre] OFF;
    END

DROP TABLE [dbo].[Genre];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Genre]', N'Genre';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Livre]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Livre] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Titre]       NVARCHAR (100) NULL,
    [Description] NVARCHAR (250) NULL,
    [DateSortie]  DATE           NULL,
    [IdAuteur]    INT            NULL,
    [IdGenre]     INT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Livre])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Livre] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Livre] ([Id], [Titre], [Description], [DateSortie], [IdAuteur], [IdGenre])
        SELECT   [Id],
                 [Titre],
                 [Description],
                 [DateSortie],
                 [IdAuteur],
                 [IdGenre]
        FROM     [dbo].[Livre]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Livre] OFF;
    END

DROP TABLE [dbo].[Livre];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Livre]', N'Livre';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Utilisateur]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Utilisateur] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [NomUtilisateur] NVARCHAR (50)  NULL,
    [MotDePasse]     NVARCHAR (250) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Utilisateur])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Utilisateur] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Utilisateur] ([Id], [NomUtilisateur], [MotDePasse])
        SELECT   [Id],
                 [NomUtilisateur],
                 [MotDePasse]
        FROM     [dbo].[Utilisateur]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Utilisateur] OFF;
    END

DROP TABLE [dbo].[Utilisateur];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Utilisateur]', N'Utilisateur';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_Livre_ToTable]...';


GO
ALTER TABLE [dbo].[Livre] WITH NOCHECK
    ADD CONSTRAINT [FK_Livre_ToTable] FOREIGN KEY ([IdAuteur]) REFERENCES [dbo].[Auteur] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Livre_ToTable_1]...';


GO
ALTER TABLE [dbo].[Livre] WITH NOCHECK
    ADD CONSTRAINT [FK_Livre_ToTable_1] FOREIGN KEY ([IdGenre]) REFERENCES [dbo].[Genre] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Livre] WITH CHECK CHECK CONSTRAINT [FK_Livre_ToTable];

ALTER TABLE [dbo].[Livre] WITH CHECK CHECK CONSTRAINT [FK_Livre_ToTable_1];


GO
PRINT N'Update complete.';


GO
